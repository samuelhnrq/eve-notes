[
  {
    "id": "f5762e7c-0889-48db-b063-47d06b4e2f5e",
    "realm": "allo",
    "displayName": "Allo Challenge",
    "displayNameHtml": "",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": true,
    "registrationEmailAsUsername": true,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "bruteForceStrategy": "MULTIPLE",
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "58234a24-8f84-4555-a6b4-d6935ba6072b",
          "name": "admin",
          "description": "",
          "composite": false,
          "clientRole": false,
          "containerId": "f5762e7c-0889-48db-b063-47d06b4e2f5e",
          "attributes": {}
        },
        {
          "id": "b3c75214-7767-49fc-8ac8-b7059d4b3e59",
          "name": "writer",
          "description": "",
          "composite": true,
          "composites": {
            "client": {
              "backend": ["user"]
            }
          },
          "clientRole": false,
          "containerId": "f5762e7c-0889-48db-b063-47d06b4e2f5e",
          "attributes": {}
        },
        {
          "id": "bcfb5034-ac76-4cc5-bc88-480036708318",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "f5762e7c-0889-48db-b063-47d06b4e2f5e",
          "attributes": {}
        },
        {
          "id": "22badf0e-4cc5-4d1d-8100-a4dd00ebf2e7",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "f5762e7c-0889-48db-b063-47d06b4e2f5e",
          "attributes": {}
        },
        {
          "id": "8b1f3b66-abed-4678-bb2f-d712424f7670",
          "name": "default-roles-allo challenge",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": ["offline_access", "uma_authorization"],
            "client": {
              "backend": ["user"],
              "account": ["manage-account", "view-profile"]
            }
          },
          "clientRole": false,
          "containerId": "f5762e7c-0889-48db-b063-47d06b4e2f5e",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "07bb1ebd-a591-44e1-a74a-dfe1d3c9a155",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "0a0b20a4-5754-4884-acf7-27a07f3a1127",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "7acbd926-24bd-4798-84a6-e1f668592075",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "manage-users",
                  "query-groups",
                  "impersonation",
                  "manage-identity-providers",
                  "manage-realm",
                  "manage-clients",
                  "create-client",
                  "view-users",
                  "view-realm",
                  "view-clients",
                  "view-events",
                  "manage-authorization",
                  "view-authorization",
                  "manage-events",
                  "query-realms",
                  "query-clients",
                  "view-identity-providers",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "fd53b775-eb0b-47dc-8b45-4cde98b1dc85",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "4acbf321-277d-4f96-8564-2d65f98cb551",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "257cf185-9c43-4b91-a5fe-862985b3cb8a",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "46d0665c-730d-4dbc-b15e-9e0b9407af26",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "ee597495-cbe3-4525-9e62-0c9ad3f0254b",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "136e291e-36d0-40f7-bb6c-126ab7a2fce9",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": ["query-groups", "query-users"]
              }
            },
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "207b0987-225a-44cc-9a96-2013b3019f82",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": ["query-clients"]
              }
            },
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "b7fbf142-f74a-4948-8a4a-9c776ce96cf2",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "818b4b9e-f90e-4823-a449-7730768ac97f",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "057e69c3-6cbd-456d-aebf-15cf5ea5a40e",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "8424d88b-ac8b-4ed5-812c-c3e74275c050",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "8420ce68-a314-47fc-8d92-6361097921f0",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "9bb4ee1d-c7aa-4a50-99f7-c248f79e6279",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "7c7d490e-436b-4dbb-af62-286f9e3107e7",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "9c84089e-20b4-414f-bec7-444e6ef58f51",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          },
          {
            "id": "59c67a23-fea7-4c64-b080-afaadab59958",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "backend": [
          {
            "id": "046af82f-d585-47a4-8f6b-f38915d292aa",
            "name": "admin",
            "description": "",
            "composite": false,
            "clientRole": true,
            "containerId": "87075c6d-b90a-46ed-82d3-ea3eca681a8f",
            "attributes": {}
          },
          {
            "id": "806d1949-a8cc-4520-bfcb-549c3dccc920",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "87075c6d-b90a-46ed-82d3-ea3eca681a8f",
            "attributes": {}
          },
          {
            "id": "042f3290-53e5-4a25-bbe9-c0c35636b302",
            "name": "user",
            "description": "",
            "composite": false,
            "clientRole": true,
            "containerId": "87075c6d-b90a-46ed-82d3-ea3eca681a8f",
            "attributes": {}
          }
        ],
        "account-console": [],
        "broker": [
          {
            "id": "53ad7792-ca89-4cbd-a155-b6c56230ca52",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "af52378c-1bba-4caa-8b2a-1f31d03fe343",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "28e0b01b-de07-497f-aaa4-73799dc7c1b3",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "4bc60f5a-9c16-4b15-9f1c-beacc010c238",
            "attributes": {}
          },
          {
            "id": "5c681001-0556-490e-aa64-be8a6c2ba29e",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "4bc60f5a-9c16-4b15-9f1c-beacc010c238",
            "attributes": {}
          },
          {
            "id": "3b077bcd-014f-47aa-8a03-7c59f78a53e6",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["manage-account-links"]
              }
            },
            "clientRole": true,
            "containerId": "4bc60f5a-9c16-4b15-9f1c-beacc010c238",
            "attributes": {}
          },
          {
            "id": "372c3838-dc89-4f32-9a00-c4cebea2591e",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "4bc60f5a-9c16-4b15-9f1c-beacc010c238",
            "attributes": {}
          },
          {
            "id": "3a5cdd93-7f2a-4c1b-b6e1-20f3bee8e553",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "4bc60f5a-9c16-4b15-9f1c-beacc010c238",
            "attributes": {}
          },
          {
            "id": "1ca3563b-47fc-421c-87e1-6a70cd92180b",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["view-consent"]
              }
            },
            "clientRole": true,
            "containerId": "4bc60f5a-9c16-4b15-9f1c-beacc010c238",
            "attributes": {}
          },
          {
            "id": "65272353-68a5-411a-a5ed-7f53b492bf69",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "4bc60f5a-9c16-4b15-9f1c-beacc010c238",
            "attributes": {}
          },
          {
            "id": "498e59c3-111d-4393-a51c-ced40b595045",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "4bc60f5a-9c16-4b15-9f1c-beacc010c238",
            "attributes": {}
          }
        ],
        "frontend": [
          {
            "id": "aaa7581d-2692-4d93-a891-6b72e71d4dd8",
            "name": "test",
            "description": "",
            "composite": false,
            "clientRole": true,
            "containerId": "c4f033d4-15b7-476d-99d3-3b145c00355e",
            "attributes": {}
          },
          {
            "id": "24bb563b-eb35-40c0-afd5-cc8c4d7d7e16",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "c4f033d4-15b7-476d-99d3-3b145c00355e",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "8b1f3b66-abed-4678-bb2f-d712424f7670",
      "name": "default-roles-allo challenge",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "f5762e7c-0889-48db-b063-47d06b4e2f5e"
    },
    "requiredCredentials": ["password"],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": ["offline_access"]
      }
    ],
    "clients": [
      {
        "id": "4bc60f5a-9c16-4b15-9f1c-beacc010c238",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/Allo%20Challenge/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/realms/Allo%20Challenge/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "2aa57d63-03f8-4a79-8e47-14d60ded5414",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/allo/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/realms/allo/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "756638e8-4152-4ea0-b4ce-cae2bcb6deb9",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "19870d21-c3b6-4c93-a92a-fa2659d98fe1",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "87075c6d-b90a-46ed-82d3-ea3eca681a8f",
        "clientId": "backend",
        "name": "Backend",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "K44Tbn7EVqqQr4ZTtGy6glLBSzkgVmWp",
        "redirectUris": ["/*"],
        "webOrigins": ["/*"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "authorizationServicesEnabled": true,
        "publicClient": false,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "oidc.ciba.grant.enabled": "false",
          "client.secret.creation.time": "1740934163",
          "backchannel.logout.session.required": "true",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "service_account",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ],
        "authorizationSettings": {
          "allowRemoteResourceManagement": true,
          "policyEnforcementMode": "ENFORCING",
          "resources": [
            {
              "name": "Default Resource",
              "type": "urn:backend:resources:default",
              "ownerManagedAccess": false,
              "attributes": {},
              "uris": ["/*"]
            },
            {
              "name": "notes",
              "ownerManagedAccess": true,
              "displayName": "Notes",
              "attributes": {
                "Owner": ["213"]
              },
              "uris": [],
              "scopes": [
                {
                  "name": "access-backend"
                }
              ],
              "icon_uri": ""
            }
          ],
          "policies": [
            {
              "name": "Default Policy",
              "description": "A policy that grants access only for users within this realm",
              "logic": "POSITIVE",
              "decisionStrategy": "AFFIRMATIVE",
              "type": "regex",
              "config": {
                "targetContextAttributes": "false",
                "pattern": ".*",
                "targetClaim": "sub"
              }
            },
            {
              "name": "Reader",
              "description": "",
              "type": "role",
              "logic": "POSITIVE",
              "decisionStrategy": "UNANIMOUS",
              "config": {
                "fetchRoles": "false",
                "roles": "[{\"id\":\"backend/user\",\"required\":true}]"
              }
            },
            {
              "name": "Default Permission",
              "description": "A permission that applies to the default resource type",
              "type": "resource",
              "logic": "POSITIVE",
              "decisionStrategy": "UNANIMOUS",
              "config": {
                "defaultResourceType": "urn:backend:resources:default",
                "applyPolicies": "[\"Default Policy\"]"
              }
            },
            {
              "name": "Notes",
              "description": "",
              "type": "resource",
              "logic": "POSITIVE",
              "decisionStrategy": "UNANIMOUS",
              "config": {
                "resources": "[\"notes\"]",
                "applyPolicies": "[\"Default Policy\"]"
              }
            }
          ],
          "scopes": [
            {
              "name": "access-backend",
              "iconUri": ""
            }
          ],
          "decisionStrategy": "UNANIMOUS"
        }
      },
      {
        "id": "af52378c-1bba-4caa-8b2a-1f31d03fe343",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "c4f033d4-15b7-476d-99d3-3b145c00355e",
        "clientId": "frontend",
        "name": "Allo Challenge",
        "description": "",
        "rootUrl": "http://localhost:3000",
        "adminUrl": "http://localhost:3000",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "Z7TCsSh6DaooU2uz6awsChN40u4f4u4p",
        "redirectUris": ["/api/auth/callback/keycloak"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "authorizationServicesEnabled": true,
        "publicClient": false,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "client.secret.creation.time": "1740930765",
          "client.introspection.response.allow.jwt.claim.enabled": "false",
          "post.logout.redirect.uris": "+",
          "frontchannel.logout.session.required": "true",
          "oauth2.device.authorization.grant.enabled": "true",
          "use.jwks.url": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "use.refresh.tokens": "true",
          "realm_client": "false",
          "oidc.ciba.grant.enabled": "false",
          "client.use.lightweight.access.token.enabled": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "require.pushed.authorization.requests": "false",
          "acr.loa.map": "{}",
          "display.on.consent.screen": "false",
          "token.response.type.bearer.lower-case": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "service_account",
          "acr",
          "profile",
          "roles",
          "offline_access",
          "basic",
          "email"
        ],
        "optionalClientScopes": ["address", "phone", "microprofile-jwt"],
        "authorizationSettings": {
          "allowRemoteResourceManagement": true,
          "policyEnforcementMode": "ENFORCING",
          "resources": [
            {
              "name": "Default Resource",
              "type": "urn:frontend:resources:default",
              "ownerManagedAccess": false,
              "attributes": {},
              "uris": ["/*"]
            }
          ],
          "policies": [
            {
              "name": "Default Policy",
              "logic": "POSITIVE",
              "decisionStrategy": "AFFIRMATIVE",
              "type": "regex",
              "config": {
                "targetContextAttributes": "false",
                "pattern": ".*",
                "targetClaim": "sub"
              }
            },
            {
              "name": "Default Permission",
              "description": "A permission that applies to the default resource type",
              "type": "resource",
              "logic": "POSITIVE",
              "decisionStrategy": "UNANIMOUS",
              "config": {
                "defaultResourceType": "urn:frontend:resources:default",
                "applyPolicies": "[\"Default Policy\"]"
              }
            }
          ],
          "scopes": [],
          "decisionStrategy": "UNANIMOUS"
        }
      },
      {
        "id": "5c63f995-39c3-43c1-9e11-7abbe980f63a",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "31e40b43-7222-41c4-996a-dac037080ebe",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/Allo%20Challenge/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": ["/admin/Allo%20Challenge/console/*"],
        "webOrigins": ["+"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "27483376-cdfd-4ea2-a66d-2e901fe029aa",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "organization",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "71e3fe0b-4b33-462c-93fe-a075c517cb74",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "318b6601-69d4-40b0-8b83-c05e0c224082",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "94c4e26f-557d-41b5-a223-d4bb4d014425",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "2d1b3c3d-f1cd-4c1a-a503-3d7a85f47b8e",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "1d52880b-52b2-4e31-908c-2ca3a341d5e9",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "8c98a904-409a-4e3b-b7f6-7f1dc528d515",
        "name": "organization",
        "description": "Additional claims about the organization a subject belongs to",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${organizationScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "8828a4da-4a76-4d3e-a30f-28a65ae4417f",
            "name": "organization",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-organization-membership-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "organization",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "38eda7a5-d8e9-4a8b-b1f3-1b7cb44ba162",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "013fe432-f432-49f0-98c7-11e7c5b91618",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "a7071cb7-7fb8-4ab1-b05d-10f6d95748e8",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${addressScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "5be2024a-6da1-470b-b8af-2df5080dc195",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "0c3c0c3f-266f-4def-bab2-ecf0db4d8e8e",
        "name": "service_account",
        "description": "Specific scope for a client enabled for service accounts",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "328ed93f-1fcd-4c87-95d8-c41197d22fde",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a7cabfb4-8edc-4d11-b9b0-7bf827913890",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5d0e63ee-3d81-42a0-8bdd-52eb4eaf0873",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "1ccdf1b7-19d5-4707-980d-1fa0773b749d",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${profileScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "b4468f91-7934-4c06-b06e-92bd62e946cd",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "22ca3647-6b19-428c-b5c9-f85296fe637c",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b68d90c7-ef8b-4f68-b917-382b85ae4d0c",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a879580b-da68-45b2-8337-7109a37a8df7",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "648e02c6-b547-4ea2-884a-77a989211eb7",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "a885c714-7153-4e70-8fa8-f92fa460b0b4",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f804bc8c-371e-4963-ba82-2fbeb1648ae8",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f17c7671-8c43-4fa2-bfeb-c3a53eb8a21e",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e87723f1-ebcd-4783-b0c1-cd0ca00e6484",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "38c957af-1124-425f-ab2d-6412829bb376",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "be735b53-903a-4a3d-9c4d-70141acdae7c",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0b6d3f90-8469-4c1c-b55f-ad1deb0436bd",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "31564cf0-241b-4812-9bdd-4e3a32db19c3",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "36081bba-4e12-499d-bf32-bee1e874ed1b",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "d309fa4e-2301-4690-9a74-4b111536c658",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${emailScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "bbf126b8-f8a6-46b1-a83c-9314fddb5afb",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "3c0490ce-f0e4-4ed1-b89c-279815d39ed2",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "e24e114e-9423-4078-a065-242c93e067d1",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${phoneScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "42c29482-5e9d-438f-b557-b97392c2cc12",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "a52a03f1-3824-4b3d-a9a8-681cccda2757",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "0c9615e0-a881-4f34-a61e-15e933c52847",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "1611cc8f-314b-4c0b-97be-0afa8d96342a",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "87480fa6-0289-4b7e-b33c-b77deaf1a16a",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "a8da3e32-c53c-4fbb-837b-3b78a7d1ef00",
        "name": "saml_organization",
        "description": "Organization Membership",
        "protocol": "saml",
        "attributes": {
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "727c71ee-364c-4cbd-8068-064d0bd4d807",
            "name": "organization",
            "protocol": "saml",
            "protocolMapper": "saml-organization-membership-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "d3b667d6-dfbe-41da-a9d2-bee0e324dc98",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "${rolesScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "626eeb1f-5f7b-40b3-a46c-49f376c0ce0d",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "ecf965e8-6db4-4887-82cc-d02a78d85f48",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "e6b9244f-86a1-41ef-8544-aa8f63226ba8",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "0e780946-5023-46e5-ae9c-88eb59a59e19",
        "name": "basic",
        "description": "OpenID Connect scope for add all basic claims to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "348eef57-b630-4193-ac16-8819f1de6c92",
            "name": "auth_time",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "AUTH_TIME",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "auth_time",
              "jsonType.label": "long"
            }
          },
          {
            "id": "578e1b81-83ca-4f86-9da8-86b96d8855a5",
            "name": "sub",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-sub-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "saml_organization",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr",
      "basic"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt",
      "organization"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {
      "password": "re_SAH5A2Vw_FrDemJkPpJVuXE6oyKiteWyj",
      "replyToDisplayName": "",
      "starttls": "false",
      "auth": "true",
      "port": "2465",
      "host": "smtp.resend.com",
      "replyTo": "samuel@slva.fr",
      "from": "noreply@slva.fr",
      "fromDisplayName": "SLVA.fr",
      "envelopeFrom": "",
      "ssl": "true",
      "user": "resend"
    },
    "loginTheme": "keycloak.v2",
    "accountTheme": "",
    "adminTheme": "",
    "emailTheme": "",
    "eventsEnabled": true,
    "eventsExpiration": 3600,
    "eventsListeners": ["jboss-logging"],
    "enabledEventTypes": [
      "SEND_RESET_PASSWORD",
      "UPDATE_CONSENT_ERROR",
      "GRANT_CONSENT",
      "VERIFY_PROFILE_ERROR",
      "REMOVE_TOTP",
      "REVOKE_GRANT",
      "UPDATE_TOTP",
      "LOGIN_ERROR",
      "CLIENT_LOGIN",
      "RESET_PASSWORD_ERROR",
      "UPDATE_CREDENTIAL",
      "IMPERSONATE_ERROR",
      "CODE_TO_TOKEN_ERROR",
      "CUSTOM_REQUIRED_ACTION",
      "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
      "RESTART_AUTHENTICATION",
      "IMPERSONATE",
      "UPDATE_PROFILE_ERROR",
      "LOGIN",
      "OAUTH2_DEVICE_VERIFY_USER_CODE",
      "UPDATE_PASSWORD_ERROR",
      "CLIENT_INITIATED_ACCOUNT_LINKING",
      "OAUTH2_EXTENSION_GRANT",
      "USER_DISABLED_BY_PERMANENT_LOCKOUT",
      "REMOVE_CREDENTIAL_ERROR",
      "TOKEN_EXCHANGE",
      "AUTHREQID_TO_TOKEN",
      "LOGOUT",
      "REGISTER",
      "DELETE_ACCOUNT_ERROR",
      "CLIENT_REGISTER",
      "IDENTITY_PROVIDER_LINK_ACCOUNT",
      "USER_DISABLED_BY_TEMPORARY_LOCKOUT",
      "DELETE_ACCOUNT",
      "UPDATE_PASSWORD",
      "CLIENT_DELETE",
      "FEDERATED_IDENTITY_LINK_ERROR",
      "IDENTITY_PROVIDER_FIRST_LOGIN",
      "CLIENT_DELETE_ERROR",
      "VERIFY_EMAIL",
      "CLIENT_LOGIN_ERROR",
      "RESTART_AUTHENTICATION_ERROR",
      "EXECUTE_ACTIONS",
      "REMOVE_FEDERATED_IDENTITY_ERROR",
      "TOKEN_EXCHANGE_ERROR",
      "PERMISSION_TOKEN",
      "FEDERATED_IDENTITY_OVERRIDE_LINK",
      "SEND_IDENTITY_PROVIDER_LINK_ERROR",
      "UPDATE_CREDENTIAL_ERROR",
      "EXECUTE_ACTION_TOKEN_ERROR",
      "OAUTH2_EXTENSION_GRANT_ERROR",
      "SEND_VERIFY_EMAIL",
      "OAUTH2_DEVICE_AUTH",
      "EXECUTE_ACTIONS_ERROR",
      "REMOVE_FEDERATED_IDENTITY",
      "OAUTH2_DEVICE_CODE_TO_TOKEN",
      "IDENTITY_PROVIDER_POST_LOGIN",
      "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
      "FEDERATED_IDENTITY_OVERRIDE_LINK_ERROR",
      "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
      "UPDATE_EMAIL",
      "REGISTER_ERROR",
      "REVOKE_GRANT_ERROR",
      "EXECUTE_ACTION_TOKEN",
      "LOGOUT_ERROR",
      "UPDATE_EMAIL_ERROR",
      "CLIENT_UPDATE_ERROR",
      "AUTHREQID_TO_TOKEN_ERROR",
      "INVITE_ORG_ERROR",
      "UPDATE_PROFILE",
      "CLIENT_REGISTER_ERROR",
      "FEDERATED_IDENTITY_LINK",
      "INVITE_ORG",
      "SEND_IDENTITY_PROVIDER_LINK",
      "SEND_VERIFY_EMAIL_ERROR",
      "RESET_PASSWORD",
      "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
      "OAUTH2_DEVICE_AUTH_ERROR",
      "REMOVE_CREDENTIAL",
      "UPDATE_CONSENT",
      "REMOVE_TOTP_ERROR",
      "VERIFY_EMAIL_ERROR",
      "SEND_RESET_PASSWORD_ERROR",
      "CLIENT_UPDATE",
      "CUSTOM_REQUIRED_ACTION_ERROR",
      "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
      "UPDATE_TOTP_ERROR",
      "CODE_TO_TOKEN",
      "VERIFY_PROFILE",
      "GRANT_CONSENT_ERROR",
      "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
    ],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "1db28965-1091-448d-86d8-48ce76e98a82",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "c3386982-86cd-429a-b5a0-576aceb8ee40",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-property-mapper",
              "oidc-address-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-full-name-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-attribute-mapper"
            ]
          }
        },
        {
          "id": "8879f08d-38b2-459f-91f6-5f59ba009b7a",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        },
        {
          "id": "cafcf81e-6a4c-4baa-8716-3e7e6462a232",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        },
        {
          "id": "dea7422f-19d0-4a5a-8a54-5cba9a547b28",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-property-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-full-name-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-address-mapper"
            ]
          }
        },
        {
          "id": "834a0d4e-2157-4a1d-a638-23b57530c0ce",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": ["200"]
          }
        },
        {
          "id": "8a7d15f9-b8d1-491f-ac09-a110f97e12b3",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "eeda153c-93ae-4b1f-a79c-e38479639f98",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": ["true"],
            "client-uris-must-match": ["true"]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "6b0362c0-4fa8-4e2d-b9f5-4c1f0639a896",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": ["0d04b995-bc4e-4448-93c8-7078743513c5"],
            "secret": ["0tLw63pNWRx0IlQ85vIw4A"],
            "priority": ["100"]
          }
        },
        {
          "id": "2e95aba4-c8ad-4b62-84a5-2dcdbfab1814",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEAvcqAsqpzxxdBxb7yuPM3pk8NprtJ+19bjeXi50q5bXQS+eKGMkUd3asiwqqNg6v6HKMOalQ5iOWkDegrX/2bjnM8SJzWUnNEgHXzGpM7WzSSEpZlVpQP8ilWQZYVJSbhKdHvO56OHF48kldIaMCO6psauonPwhcY0vaVzX1MZ0cjkdNZF/Tf8aONwQnSBSXG6FDzkcNpp9MYaiYiwvuaCwXCZerJG+8zyKPNR8Y3cScBDQZD4spWkwg0wtd7vCLWVPoxQrQbH5sGmfJqghWLtCi0AKkDwNoTHHCy31l4ulsU+qUre58pOR3d9SqXXwxNkQ2o7vGszXEUon59D6r++wIDAQABAoIBACCUTHdfDzTT5zR8zMm25oyj8WH3sIF4Iw0+sy6lAyOo00EWA5dJihDtObBU+qnpsauMygKyppW7ZegFPLzjmfpgCa8lTR0mMFIk7TBYqc3EPnb2Xjr4e6xEMExd6Q9Rl0FIilqfoyF3g8pTNVjWBTJ8oZ/33DQjJt2/+oMlySHJJlYjUZnhFHaK5xdif93dKMcSq0nINMwlZOLCrvghY/vVYs2kri7QE4iGzpjc8JaGMtl19cEapMYpYyp2P0LOpVdo8VDIguyAQQ+TChDksJPEp2beTxQyCS55IdUHD8Q66F1mc4jCggK6Y683q+9yINbMwcq9H0jddzebggJ31GECgYEA9Qo9hTHElLZxLEaFbTmYf+RSNjdnn3JcuAniLaXOzMZ7aCUcWpMQKHjzyHstuUyPqrVBNdjSTfvG3uTJUAPpEWhnFOSeVMzEKJ7Ipfljb2V147xvPCMiclYEvmPzLfIMe8ycQEAjDwRTchOhpfd/7Scpp/uZdiDdFwKE5THIE7MCgYEAxkemZlOgm4V8QO59IQVT35BF3YTgn6Xe2LQyn7dzEYGtG8naIdB/9q5Xyuqkv2sGQxlyVWBLXf8y7HeT44PYMKXMZI3r0fOOyZiVdIbnUzqZnoiirx6f+fcch/rbGd/GgbBn1XNTcYOPs+N2B5amoUqWk2qzDZ+XIQ27NMojY5kCgYEAjiXMnnHKegKEEI0wZbZdswM+ddkaMbLj+pcxMA3Zs40IldfBZQGfA/t2YDykv7OcPAk9tQD8ruR571+FMPezwrdv5PzipIrM2EuUVkQf3MVc6Cmt1ZMELpOb2N6eeW7Ksx51HgiWzeVSiwC8a0zyVx662Yno8lAKMYjykwqX6GUCgYBtZdTieluP0zt2G9+AG49mNxTFHu5MR1lH2UxhIPdk/lZDkcA/jek8cn7P31ycnHEtDlotzt5mc0pme6dmDTV3ydKW3FLzWN08T2qOi2wQWLGvbZXM5ym+4d+lCvxeL0A4B9uSQnoUlFDyIJrbnvw624tutJ0r9BSPUSMsAic6aQKBgH0NwU/foR0ksNAvSW2eUr5zmPZYmViXVeOFUzkO02YvRTXsCsdZE66Vz5MVXb+8NOHP9JxCx59oi99fXSCVQVsIC/GLikaE2XVH9QmhmMTQdxm0XQUrfelterd3MrOMi5Z5xeJBfcRgPqz3//yYQrJlg0grYfKkbpT+BzWDe2qj"
            ],
            "keyUse": ["SIG"],
            "certificate": [
              "MIICqzCCAZMCBgGVVzP/JDANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5BbGxvIENoYWxsZW5nZTAeFw0yNTAzMDIxNDExMjBaFw0zNTAzMDIxNDEzMDBaMBkxFzAVBgNVBAMMDkFsbG8gQ2hhbGxlbmdlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvcqAsqpzxxdBxb7yuPM3pk8NprtJ+19bjeXi50q5bXQS+eKGMkUd3asiwqqNg6v6HKMOalQ5iOWkDegrX/2bjnM8SJzWUnNEgHXzGpM7WzSSEpZlVpQP8ilWQZYVJSbhKdHvO56OHF48kldIaMCO6psauonPwhcY0vaVzX1MZ0cjkdNZF/Tf8aONwQnSBSXG6FDzkcNpp9MYaiYiwvuaCwXCZerJG+8zyKPNR8Y3cScBDQZD4spWkwg0wtd7vCLWVPoxQrQbH5sGmfJqghWLtCi0AKkDwNoTHHCy31l4ulsU+qUre58pOR3d9SqXXwxNkQ2o7vGszXEUon59D6r++wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBYKloD/yDfaasa0Fxt+Nlhrh7p4AhOtrpdukCY5QUPu/fvAkupCSpe5KmQDu4I4E6V/R7q7Lz8TqzabRiCqlfr39Z7pG6xyFvD4MttixdH8er6aMrzvU+TxXzYxfqpHtMqYOVmIoXk91iHoJCrdT7m+8tE5sFzYdYslhQyWuzvPH+R2Yp9SgsLZW3aC8En1ehk+lys7vCtogHazPbEygRN7R9j1eMd95FAYoCqadI0lKKll2duKzPCCAzb5lGxfTVdB3jPaBvrczY4lpGFslZidlA/znV1hcbwLRCqrLomWrofuDho2/+MhFoiBoxd9i+6XpCxq2qDEOE/5dSro7FQ"
            ],
            "priority": ["100"]
          }
        },
        {
          "id": "10cea270-8c22-4914-b9dd-601a9a5440d9",
          "name": "hmac-generated-hs512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": ["00f98e66-cbb3-486f-8b1b-3374f47ee18e"],
            "secret": [
              "p6c84DsYxdaUmHid54kvPLctFtl9IZP1dFQUrqw9kNYSaQpLKRLc5OLr8TFLmWQkNuXYFp_psChXLzU9Ikf2DZXkq_8WLp6rhlun0shMePLSFDtt0dEBF2H4NTLBSb6OwL0QxsrmAV_p_agMt62Rj5nqWlbGituSj8kHm7wFT3c"
            ],
            "priority": ["100"],
            "algorithm": ["HS512"]
          }
        },
        {
          "id": "d4ea30ca-3c11-4a76-9fa5-9529902e576a",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEA1eyTQn+3FJzq2Q9wY0m41ZoiY1CXN+ceDxpf/0O+FQzw7AF4+IWb/BOBAY+z0/KBHYMCLJP6wHHKcxJTnX2fnDIDeqGdTgRHtgcI9/fHzn6CURlnH/vIjK3AWapqS7znM+Uc40jzmWqVGqYQaOrUYIlm+abMahbzTz5dL+HuvADC4WNn6fd/+iLPEQMVVmTec/fnkVR4bIrnGXbLLSgPYb5C70WvKC/N3aEtpivdiCOPPHeTktzCDeCeENst2BgX69dO/tofQKLEitcPxhswpsRgfc8ARAIswes+z621ra3+DJWQOi5qyBQgnWJmDeeoHztVk6/nV76HbGI/LpsOpwIDAQABAoIBAFUBBATtDdk9fx5QQbbaUP1jmV2AZQ48IpgawWGD0BC6SzNkZGbQZIqWT3FI4kqKdp6884y2InH85VazRhFzHQyqXPKKLKEXF02v3vL1fOpDH9JM90rguDCaTC/1BPbicbaPyFpSHyXrkaL8sNGX2lsfzhDOpDRVuUnYPJwtuTjvlHUtHD8LHoeTCPdAFm5RazoCPcxlILR6DzVMKsK0py+HMECtf8RwvYe/0mEB8MJQKxRlAQDxhVNFOfH4ns1gXtM/xLZJTEN5MQiag3QUTHUaThSzKyJ1Wj7LvqufE2xE3GO181OmuYcu8+uRUpS2wIcwVYQdY+dJze5g192JkR0CgYEA8ER6X/o4lcADgLPHxI1RYW2tvPPyS84+iAVjnJDyPcg8nFKGvu3hnhgf48ZMI/Uicdb7KcPpGLNXeqV7IZQQtkP0uS3EJuloOVFhzCJMJ1wu3mzw7oCzw3GnJcHFD/5Lj8ruc6WBuUkQnuKWyS7v1fXiR3Tlp6mbUUP3LHfkE7sCgYEA4+6DJNisy/PFGzamykz81+11UbWNauIrj3ciADx6JDuT3mvP75CWWjHpc233GB3Aka4r7qwr39iRD0FVpkZT1LwlDydSzi9fG7HnxNX4mqK9s/mgM/d9zpShzp1Npl1rk41yfSJy8ouTxI1SebZDAcGbvPNdaR0moqPhmfyrRAUCgYAoRcIhXkanyySLKRc9+dX/N6wcdONTE4HluMmGj8Ea2/pU1XxiemsL3c1Sl4VhrZAVdsxopr7mdgEevKgT68aVVnSpqWMshokCuoJi/gi3vDra63XC9G2tP9qdeIo4cQ5nTsODPOWukfGoQCC4HhbzTSCdi5mG7eXrzDGdEYd4SwKBgGNe7NX3kP4p/NjsbrLr9Z+96tQArvLWP9+ANNadhzKcts7VegYbpzETaY/ldUCSWA4rPQQFE+u3YyafeVPQfWPV0uJUZol1paVRXpY2Ivhn0wTP48RENhkGO7T0Z5IMUIY3uJ5Nkoejynx6kGZ3y6bMXbV29FaLWvi1MfoMai5xAoGBALp3jd6B4mo54rS0ronyGc46/4KE69GzqPDW3/NjTTNjpsZ3+Gus4R+0QNOfLjAEq1r4EP0GEEdd9+PrGrRePvPF2+Ttk1fOTYjVWTbf1yzqbVNTqcoJnsXPu1SrnW/wjZnrgpNn8t+b0VRwFduWF/alDHp7ycpB1jAeFAWlL4lC"
            ],
            "keyUse": ["ENC"],
            "certificate": [
              "MIICqzCCAZMCBgGVVzP/izANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5BbGxvIENoYWxsZW5nZTAeFw0yNTAzMDIxNDExMjBaFw0zNTAzMDIxNDEzMDBaMBkxFzAVBgNVBAMMDkFsbG8gQ2hhbGxlbmdlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1eyTQn+3FJzq2Q9wY0m41ZoiY1CXN+ceDxpf/0O+FQzw7AF4+IWb/BOBAY+z0/KBHYMCLJP6wHHKcxJTnX2fnDIDeqGdTgRHtgcI9/fHzn6CURlnH/vIjK3AWapqS7znM+Uc40jzmWqVGqYQaOrUYIlm+abMahbzTz5dL+HuvADC4WNn6fd/+iLPEQMVVmTec/fnkVR4bIrnGXbLLSgPYb5C70WvKC/N3aEtpivdiCOPPHeTktzCDeCeENst2BgX69dO/tofQKLEitcPxhswpsRgfc8ARAIswes+z621ra3+DJWQOi5qyBQgnWJmDeeoHztVk6/nV76HbGI/LpsOpwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA9IHTkaKL8AzKhZS+fygLz85+rkZRLkwYlDyWz4jSwh7IHizVmvx+Z7l/0XLmBvLKzWeWuUGYyxrOjY3brM4XiHk43ytvQDfpJwhOTF7ebnP3F8vmveWDWaXYyRhf5OiliSx6gEyKX5yAeTE7z9Yl62sjBlKv8/PnXHtinuqfToQguqe5ufhdtS1MgHzHIbpEcCBlz3uodmAtz2bn43bVl2fifKkPAdkGBI1Z3MLsfQ2Pr7BvMdc1MikdzGOOsRELIdnu2c6Yv5orrqNuTQO4c59yriqluUCkYXkY5wLW6GYbPioOv5GZPqXYqiST/sDr7I+fQ6DmiH6/lTAMUnQSw"
            ],
            "priority": ["100"],
            "algorithm": ["RSA-OAEP"]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "dce786cb-4939-424a-90b0-4201a633859a",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "e15bdb31-44d4-4f74-a3b9-5830ddd08368",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "e7f19cee-0e73-45cf-bcdf-a27ccdaa1678",
        "alias": "Browser - Conditional Organization",
        "description": "Flow to determine if the organization identity-first login is to be used",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "organization",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0ebbb0b3-2acf-4d7d-9ca7-6e13b3d193da",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "1cbb354c-5c95-40a4-b3af-99a0940ccbe5",
        "alias": "First Broker Login - Conditional Organization",
        "description": "Flow to determine if the authenticator that adds organization members is to be used",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "idp-add-organization-member",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "c72a606b-6de9-422b-bfab-5a6cbb5ae40f",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "be725786-59a2-4206-b03a-86113e630969",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0a9a09cc-1b2a-4be9-9c80-f2dbde4fe168",
        "alias": "Organization",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional Organization",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f469a5d1-b761-4a92-a532-eae7e556ae48",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "c7b44204-aa6c-4561-9e47-d5b4fc179ca4",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0191396f-4704-4624-b53c-7f82ea9de5d7",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "56b77727-040d-4d99-9c7a-7d8f544c782a",
        "alias": "browser",
        "description": "Browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 26,
            "autheticatorFlow": true,
            "flowAlias": "Organization",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "80b533eb-ca81-4d92-a1fe-9274ffd687e4",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "dcada37c-5716-4101-a702-52a5e9974d13",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "55c049eb-918d-4f72-bcc9-0208093a7e37",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f0c94f13-489d-47ee-b9a3-546ea82a9e18",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 50,
            "autheticatorFlow": true,
            "flowAlias": "First Broker Login - Conditional Organization",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "dff3ff02-55a3-401c-85cd-1096d51146bb",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "265e05f1-c0f6-4438-a444-71b7d8921c85",
        "alias": "registration",
        "description": "Registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2a184bd1-c0e4-42ec-92fc-c987e079ca46",
        "alias": "registration form",
        "description": "Registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "e62f22cb-e4c8-42bc-91b3-3b26a2349d3e",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "4d42c192-7e14-4d35-850b-27501b2fafec",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "c608fd52-217a-4c9f-9341-99caa1634734",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "76cf7d61-ec21-4481-b446-c8bda58fab1c",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "VERIFY_PROFILE",
        "name": "Verify Profile",
        "providerId": "VERIFY_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 90,
        "config": {}
      },
      {
        "alias": "delete_credential",
        "name": "Delete Credential",
        "providerId": "delete_credential",
        "enabled": true,
        "defaultAction": false,
        "priority": 100,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DevicePollingInterval": "5",
      "clientOfflineSessionMaxLifespan": "0",
      "clientSessionIdleTimeout": "0",
      "clientOfflineSessionIdleTimeout": "0",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false",
      "cibaExpiresIn": "120",
      "oauth2DeviceCodeLifespan": "600",
      "parRequestUriLifespan": "60",
      "clientSessionMaxLifespan": "0",
      "frontendUrl": "",
      "acr.loa.map": "{}",
      "darkMode": "true"
    },
    "keycloakVersion": "26.1.2",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "verifiableCredentialsEnabled": false,
    "adminPermissionsEnabled": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }
]
